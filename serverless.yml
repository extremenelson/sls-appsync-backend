# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sls-appsync-backend

plugins:
  - serverless-appsync-plugin

provider:
  name: aws
  runtime: nodejs8.10
  apiname: ${opt:apiname, 'notes-dev'}

custom:
  accountId: { Ref: AWS::AccountId }
  appSync:
    name: ${self:provider.apiname}
    region: ${self:provider.region}
    authenticationType: AMAZON_COGNITO_USER_POOLS
    userPoolConfig:
      awsRegion: { Ref: AWS::Region }
      defaultAction: ALLOW
      userPoolId: { Ref: UserPool }
    schema: schema.graphql # In case you want to change it
    serviceRole: "AppSyncServiceRole"
    dataSources:
      - type: AMAZON_DYNAMODB
        name: NotesTableDS
        description: "DynamoDB Notes Table"
        config:
          tableName: { Ref: NotesTable }
          serviceRoleArn: { Fn::GetAtt: [ DynamoDBRole, Arn ] }
    mappingTemplates:
      - dataSource: NotesTableDS
        type: Query
        field: allNotes
        request: "allnotes-request.vtl"
        response: "allnotes-response.vtl"
      - dataSource: NotesTableDS
        type: Query
        field: getNote
        request: "getnote-request.vtl"
        response: "common-response.vtl"
      - dataSource: NotesTableDS
        type: Mutation
        field: saveNote
        request: "savenote-request.vtl"
        response: "common-response.vtl"
      - dataSource: NotesTableDS
        type: Mutation
        field: deleteNote
        request: "deletenote-request.vtl"
        response: "common-response.vtl"

resources:
  Resources:
    # Amazon Cognito user pool
    UserPool:
      Type: "AWS::Cognito::UserPool"
      Description: "An Amazon Cognito user pool for authenticating users"
      Properties:
        UserPoolName: ${self:provider.apiname}-user-pool

    # An app client for the Amazon Cognito user pool
    UserPoolClient:
      Type: "AWS::Cognito::UserPoolClient"
      Description: "App Client used by AWS AppSync"
      Properties:
        ClientName: ${self:provider.apiname}-appsync-client
        GenerateSecret: false
        UserPoolId: { Ref: UserPool }

    # DynamoDB Table
    NotesTable:
      Type: "AWS::DynamoDB::Table"
      Description: "Data Store for AWS AppSync Notes Type"
      Properties:
        TableName: ${self:provider.apiname}-notes-table
        AttributeDefinitions:
          - AttributeName: "NoteId"
            AttributeType: "S"
          - AttributeName: "UserId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "NoteId"
            KeyType: "HASH"
          - AttributeName: "UserId"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    # IAM Policy to allow working with DynamoDB
    AppSyncDynamoDBPolicy:
      Type: "AWS::IAM::ManagedPolicy"
      Properties:
        Description: "Managed Policy to allow AWS AppSync to access tables in DynamoDB"
        Path: /appsync/
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:DeleteItem
                - dynamodb:UpdateItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: 
                - { Fn::Join: [ '', [ { Fn::GetAtt: [ NotesTable, Arn ] }, '/*' ] ] }

    # IAM Role for implementing the AppSync / DynamoDB policy
    DynamoDBRole:
      Type: "AWS::IAM::Role"
      Description: "IAM Role for allowing AppSync to access DynamoDB"
      DependsOn:
        - AppSyncDynamoDBPolicy
      Properties:
        RoleName: ${self:provider.apiname}-appsync-dynamodb-role
        ManagedPolicyArns:
          - Ref: AppSyncDynamoDBPolicy
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sts:AssumeRole
              Principal:
                Service:
                  - appsync.amazonaws.com


